diff --git a/folly/CMakeLists.txt b/folly/CMakeLists.txt
index e12c1cef2..1b7b66b37 100644
--- a/folly/CMakeLists.txt
+++ b/folly/CMakeLists.txt
@@ -12,6 +12,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+set(CMAKE_VERBOSE_MAKEFILE ON)
+
 add_library(
     follybenchmark
     Benchmark.cpp
@@ -72,6 +74,7 @@ if (PYTHON_EXTENSIONS)
   set(glog_lib "${GLOG_LIBRARY}")
   cmake_path(REMOVE_FILENAME glog_lib)
   set(libs "-L${CMAKE_BINARY_DIR}:${glog_lib}")
+  # set(libs "-L${CMAKE_BINARY_DIR}:${CMAKE_BINARY_DIR}/folly:${glog_lib}")
 
   add_custom_target(folly_python_bindings ALL
     DEPENDS folly create_binding_symlink
@@ -160,4 +163,5 @@ if (PYTHON_EXTENSIONS)
       WORKING_DIRECTORY ${_cybld}
     )"
   )
+
 endif ()
diff --git a/folly/python/setup.py b/folly/python/setup.py
index 3678c1542..01c79ddbf 100755
--- a/folly/python/setup.py
+++ b/folly/python/setup.py
@@ -18,29 +18,50 @@
 # Cython requires source files in a specific structure, the structure is
 # created as tree of links to the real source files.
 
+import os
+import sysconfig
+
 from Cython.Build import cythonize
 from Cython.Compiler import Options
 from setuptools import Extension, setup
 
-
 Options.fast_fail = True
 
+print("Building Cython extensions")
+cxx_flags = os.getenv("FOLLY_PYTHON_CXX_FLAGS", "")
+extra_compile_args = [f for f in cxx_flags.split(" ") if f]
+
+# library_dirs = []
+# include_dirs = [sysconfig.get_config_var("INCLUDEPY")]
+
+# conda_home = os.getenv("CONDA_PREFIX")
+# if conda_home:
+#     include_dirs.append(conda_home + "/include")
+#     library_dirs.append(conda_home + "/lib")
+
+libs = ["glog", "folly"]
+
+if os.getenv("CXX_SANITIZER"):
+    extra_compile_args.append("-fsanitize=address")
+    extra_compile_args.append("-fno-omit-frame-pointer")
+    libs.append("asan")
+
 exts = [
     Extension(
         "folly.executor",
         sources=["folly/executor.pyx", "folly/ProactorExecutor.cpp"],
-        libraries=["folly", "glog"],
-        extra_compile_args=[
-            "-std=c++17",
-        ],
+        libraries=libs,
+        # library_dirs=library_dirs,
+        # include_dirs=include_dirs,
+        extra_compile_args=extra_compile_args,
     ),
     Extension(
         "folly.iobuf",
         sources=["folly/iobuf.pyx", "folly/iobuf_ext.cpp"],
-        libraries=["folly", "glog"],
-        extra_compile_args=[
-            "-std=c++17",
-        ],
+        libraries=libs,
+        # library_dirs=library_dirs,
+        # include_dirs=include_dirs,
+        extra_compile_args=extra_compile_args,
     ),
 ]
 
@@ -51,5 +72,13 @@ setup(
     package_data={"": ["*.pxd", "*.h"]},
     setup_requires=["cython"],
     zip_safe=False,
-    ext_modules=cythonize(exts, compiler_directives={"language_level": 3}),
+    ext_modules=cythonize(
+        exts,
+        compiler_directives={
+            "language_level": 3,
+            "binding": False,
+            "emit_code_comments": False,
+            "legacy_implicit_noexcept": True,
+        },
+    ),
 )
